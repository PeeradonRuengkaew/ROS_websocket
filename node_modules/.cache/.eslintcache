[{"/Users/peeradonruengkaew/my-app-webapp-ros/src/index.js":"1","/Users/peeradonruengkaew/my-app-webapp-ros/src/App.js":"2","/Users/peeradonruengkaew/my-app-webapp-ros/src/reportWebVitals.js":"3","/Users/peeradonruengkaew/my-app-webapp-ros/src/components/Header.jsx":"4","/Users/peeradonruengkaew/my-app-webapp-ros/src/components/Body.jsx":"5","/Users/peeradonruengkaew/my-app-webapp-ros/src/components/Footer.jsx":"6","/Users/peeradonruengkaew/my-app-webapp-ros/src/components/Home.jsx":"7","/Users/peeradonruengkaew/my-app-webapp-ros/src/components/About.jsx":"8","/Users/peeradonruengkaew/my-app-webapp-ros/src/components/Connection.jsx":"9","/Users/peeradonruengkaew/my-app-webapp-ros/src/scripts/config.js":"10","/Users/peeradonruengkaew/my-app-webapp-ros/src/components/Teleoperation.jsx":"11","/Users/peeradonruengkaew/my-app-webapp-ros/src/components/RobotState.jsx":"12","/Users/peeradonruengkaew/my-app-webapp-ros/src/components/Map.jsx":"13"},{"size":564,"mtime":1668580823031,"results":"14","hashOfConfig":"15"},{"size":343,"mtime":1668520017740,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1668516487004,"results":"17","hashOfConfig":"15"},{"size":783,"mtime":1668520514969,"results":"18","hashOfConfig":"15"},{"size":579,"mtime":1668520801764,"results":"19","hashOfConfig":"15"},{"size":332,"mtime":1668521055860,"results":"20","hashOfConfig":"15"},{"size":931,"mtime":1668601953226,"results":"21","hashOfConfig":"15"},{"size":399,"mtime":1668522245956,"results":"22","hashOfConfig":"15"},{"size":1867,"mtime":1668580294137,"results":"23","hashOfConfig":"15"},{"size":180,"mtime":1668602140409,"results":"24","hashOfConfig":"15"},{"size":3212,"mtime":1668587858216,"results":"25","hashOfConfig":"15"},{"size":2594,"mtime":1668591542562,"results":"26","hashOfConfig":"15"},{"size":1588,"mtime":1668594377401,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"11pyjux",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"31"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"31"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/peeradonruengkaew/my-app-webapp-ros/src/index.js",[],[],[],"/Users/peeradonruengkaew/my-app-webapp-ros/src/App.js",["72","73","74"],[],"import Body from \"./components/Body\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport {Route, BrowserRouter as Router, Switch} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Body></Body>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/peeradonruengkaew/my-app-webapp-ros/src/reportWebVitals.js",[],[],"/Users/peeradonruengkaew/my-app-webapp-ros/src/components/Header.jsx",[],[],"/Users/peeradonruengkaew/my-app-webapp-ros/src/components/Body.jsx",[],[],"/Users/peeradonruengkaew/my-app-webapp-ros/src/components/Footer.jsx",[],[],"/Users/peeradonruengkaew/my-app-webapp-ros/src/components/Home.jsx",[],[],"/Users/peeradonruengkaew/my-app-webapp-ros/src/components/About.jsx",[],[],"/Users/peeradonruengkaew/my-app-webapp-ros/src/components/Connection.jsx",["75"],[],"import React, { Component } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Config from \"../scripts/config\";\n\n\nclass Connection extends Component{\n    state = { connected: false, ros: null};\n\n    constructor(){\n        super();\n        this.init_connection();\n    }\n\n    init_connection(){\n        this.state.ros = new window.ROSLIB.Ros();\n        console.log(this.state.ros);\n\n        this.state.ros.on(\"connection\", ()=> {\n            console.log(\"connection established!\");\n            this.setState({connected: true});\n        });\n\n        this.state.ros.on(\"close\", () => {\n            console.log(\"connection is closed! \");\n            this.setState({connected: false});\n\n            setTimeout(()=>{\n                try{\n                    this.state.ros.connect(\"ws://\"\n                    +Config.ROSBRIDGE_SERVER_IP+\n                    \":\"+Config.ROSBRIDGE_SERVER_PORT+\"\");\n                \n                } catch(error){\n                    console.log(\"connection problem\");\n                }\n\n\n            }, Config.RECONNETION_TIMER);\n\n\n        });\n\n        try{\n            this.state.ros.connect(\"ws://\" +\n            Config.ROSBRIDGE_SERVER_IP +\n            \":\" +\n            Config.ROSBRIDGE_SERVER_PORT+\n            \"\");\n        \n        } catch(error){\n            console.log(\"ws://\" +\n            Config.ROSBRIDGE_SERVER_IP +\n            \":\" +\n            Config.ROSBRIDGE_SERVER_PORT+\n            \"\")\n            console.log(\"connection problem\");\n        }\n    }\n\n    \n    render(){\n        return(\n        <div>\n\n                <Alert className=\"text-center m-3\"\n                    variant={this.state.connected? \"success\" : \"danger\" }\n                    >\n                    {this.state.connected ? \"Robot Connected\" : \"Robot Disconnected\"}\n                </Alert>\n\n        </div>);\n    }\n}\nexport default Connection;","/Users/peeradonruengkaew/my-app-webapp-ros/src/scripts/config.js",[],[],"/Users/peeradonruengkaew/my-app-webapp-ros/src/components/Teleoperation.jsx",["76"],[],"import React, { Component } from \"react\";\nimport { Joystick } from \"react-joystick-component\"\nimport Config from \"../scripts/config\";\n\nclass Teleoperation extends Component {\n    state={ ros: null };\n\n    constructor(){\n        super();\n        this.init_connection();\n\n        this.handleMove = this.handleMove.bind(this);\n        this.handleStop = this.handleStop.bind(this);\n    }\n\n    init_connection(){\n        this.state.ros = new window.ROSLIB.Ros();\n        console.log(this.state.ros);\n\n        this.state.ros.on(\"connection\",()=>{\n            console.log(\"connection established in Teleoperation Component!\");\n            console.log(this.state.ros);\n            this.setState({connected:true});\n        });\n        this.state.ros.on(\"close\",() =>{\n            console.log(\"connection is closed! \");\n            this.setState({connected: false});\n\n            setTimeout(()=>{\n                try{\n                    this.state.ros.connect(\"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.ROSBRIDGE_SERVER_PORT+\"\");\n                \n                } catch(error){\n                    console.log(\"connection problem\");\n                }\n\n\n            }, Config.RECONNETION_TIMER);\n\n\n        });\n\n        try{\n            this.state.ros.connect(\"ws://\" + \n            Config.ROSBRIDGE_SERVER_IP +\n            \":\" +\n            Config.ROSBRIDGE_SERVER_PORT+\n            \"\");\n        \n        } catch(error){\n            console.log(\"ws://\" +\n            Config.ROSBRIDGE_SERVER_IP +\n            \":\" +\n            Config.ROSBRIDGE_SERVER_PORT+\n            \"\")\n            console.log(\"connection problem\");\n        }\n    }\n\n       \n       \n\n\n    handleMove(event){\n        console.log(\"handle move\");\n\n        var cmd_vel = new window.ROSLIB.Topic({\n            ros: this.state.ros,\n            name: Config.CMD_VEL_TOPIC,\n            messageType: \"geometry_msgs/msg/Twist\",\n        });\n\n        var twist = new window.ROSLIB.Message({\n            linear: {\n                x:event.y/50,\n                y:0,\n                z:0,\n            },\n            angular: {\n                x:0,\n                y:0,\n                z:-event.x/50,\n\n            },\n        });\n        console.log(\"Publishing cmd_vel Move\");\n        cmd_vel.publish(twist);\n    }\n\n    handleStop(event){\n        console.log(\"handle stop\");\n\n        var cmd_vel = new window.ROSLIB.Topic({\n            ros: this.state.ros,\n            name: Config.CMD_VEL_TOPIC,\n            messageType: \"geometry_msgs/msg/Twist\",\n        });\n\n        var twist = new window.ROSLIB.Message({\n            linear: {\n                x:0,\n                y:0,\n                z:0,\n            },\n            angular: {\n                x:0,\n                y:0,\n                z:0,\n\n            },\n        });\n        console.log(\"Publishing cmd_vel Stop\");\n        cmd_vel.publish(twist);\n    }\n\n\n    render(){\n        return(\n            <div>\n                <Joystick\n                size={100}\n                baseColor=\"#EEEEEE\"\n                stickColor=\"#BBBBBB\"\n                move={this.handleMove}\n                stop={this.handleStop}\n                ></Joystick>\n            </div>\n        )\n\n\n    }\n  \n}\n\nexport default Teleoperation;\n","/Users/peeradonruengkaew/my-app-webapp-ros/src/components/RobotState.jsx",["77","78"],[],"import React, { Component } from \"react\";\nimport {Row, Col, Container} from \"react-bootstrap\";\nimport Config from \"../scripts/config\";\n\nclass RobotState extends Component{\n    state = {\n        ros: null,\n        linear_velocity: 0,\n        angular_velocity: 0,\n    };\n\n    constructor(){\n        super();\n        this.init_connection();\n    }\n\n\n    init_connection(){\n        this.state.ros = new window.ROSLIB.Ros();\n        console.log(this.state.ros);\n\n        this.state.ros.on(\"connection\",()=>{\n            console.log(\"connection established in Teleoperation Component!\");\n            console.log(this.state.ros);\n            this.setState({connected:true});\n        });\n        this.state.ros.on(\"close\",() =>{\n            console.log(\"connection is closed! \");\n            this.setState({connected: false});\n\n            setTimeout(()=>{\n                try{\n                    this.state.ros.connect(\"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.ROSBRIDGE_SERVER_PORT+\"\");\n                \n                } catch(error){\n                    console.log(\"connection problem\");\n                }\n\n\n            }, Config.RECONNETION_TIMER);\n\n\n        });\n\n        try{\n            this.state.ros.connect(\"ws://\" + \n            Config.ROSBRIDGE_SERVER_IP +\n            \":\" +\n            Config.ROSBRIDGE_SERVER_PORT+\n            \"\");\n        \n        } catch(error){\n            console.log(\"ws://\" +\n            Config.ROSBRIDGE_SERVER_IP +\n            \":\" +\n            Config.ROSBRIDGE_SERVER_PORT+\n            \"\")\n            console.log(\"connection problem\");\n        }\n    }\n\n\n    componentDidMount(){\n        this.getRobotState();\n    }\n\n    getRobotState(){\n     \n        var velocity_sub = new window.ROSLIB.Topic({\n            ros: this.state.ros, \n            name: \"/odom\",\n            messageType: \"nav_msgs/msg/Odometry\",\n        });\n\n        velocity_sub.subscribe((message) => {\n            this.setState({linear_velocity: message.twist.twist.linear.x.toFixed(2)});\n            this.setState({angular_velocity: message.twist.twist.angular.z.toFixed(2)});\n         });\n\n    }\n\n\n    \n\n    \n\n    render(){\n        return(\n            <div>\n                <Row>\n                    <Col>\n                    <h4 className=\"mt-4\">Velocities</h4>\n                    <p className=\"mt-0\">Linear Velocity: {this.state.linear_velocity}</p>\n                    <p className=\"mt-0\">Angular Velocity: {this.state.angular_velocity}</p>\n                    \n\n                    </Col>\n                </Row>\n\n            </div>\n       \n        );\n    }\n}\nexport default RobotState;","/Users/peeradonruengkaew/my-app-webapp-ros/src/components/Map.jsx",["79","80"],[],{"ruleId":"81","severity":1,"message":"82","line":4,"column":9,"nodeType":"83","messageId":"84","endLine":4,"endColumn":14},{"ruleId":"81","severity":1,"message":"85","line":4,"column":33,"nodeType":"83","messageId":"84","endLine":4,"endColumn":39},{"ruleId":"81","severity":1,"message":"86","line":4,"column":41,"nodeType":"83","messageId":"84","endLine":4,"endColumn":47},{"ruleId":"87","severity":1,"message":"88","line":15,"column":9,"nodeType":"89","messageId":"90","endLine":15,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":17,"column":9,"nodeType":"89","messageId":"90","endLine":17,"endColumn":19},{"ruleId":"81","severity":1,"message":"91","line":2,"column":19,"nodeType":"83","messageId":"84","endLine":2,"endColumn":28},{"ruleId":"87","severity":1,"message":"88","line":19,"column":9,"nodeType":"89","messageId":"90","endLine":19,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":17,"column":9,"nodeType":"89","messageId":"90","endLine":17,"endColumn":19},{"ruleId":"81","severity":1,"message":"92","line":50,"column":13,"nodeType":"83","messageId":"84","endLine":50,"endColumn":22},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'Container' is defined but never used.","'navClient' is assigned a value but never used."]