{"ast":null,"code":"var _jsxFileName = \"/Users/peeradonruengkaew/my-app-webapp-ros/src/components/Map.jsx\";\nimport React, { Component } from \"react\";\nimport Config from \"../scripts/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Map extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null\n    };\n    this.view_map = this.view_map.bind(this);\n  }\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    console.log(\"Map:\" + this.state.ros);\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.log(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n      console.log(\"cancont connect to the WS robot. Try again after 1 sec\");\n    }\n  }\n  view_map() {\n    var viewer = new window.ROS2D.Viewer({\n      divID: \"nav_div\",\n      width: 640,\n      height: 480\n    });\n    var navClient = new window.NAV2D.OccupancyGridClientNav({\n      ros: this.state.ros,\n      rootObject: viewer.scene,\n      viewer: viewer,\n      severName: \"/move_base\",\n      withOrientation: true\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"nav_div\",\n        children: \"Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Map;","map":{"version":3,"names":["React","Component","Config","Map","constructor","state","ros","view_map","bind","init_connection","window","ROSLIB","Ros","console","log","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","viewer","ROS2D","Viewer","divID","width","height","navClient","NAV2D","OccupancyGridClientNav","rootObject","scene","severName","withOrientation","render"],"sources":["/Users/peeradonruengkaew/my-app-webapp-ros/src/components/Map.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport Config from \"../scripts/config\";\n\nclass Map extends Component{\n\n    state = {\n        ros: null,\n    };\n\n    constructor(){\n        super();\n        this.view_map = this.view_map.bind(this);\n    }\n\n\n    init_connection(){\n        this.state.ros = new window.ROSLIB.Ros();\n        console.log(\"Map:\" + this.state.ros);\n        try{\n            this.state.ros.connect(\"ws://\" + \n            Config.ROSBRIDGE_SERVER_IP +\n            \":\" +\n            Config.ROSBRIDGE_SERVER_PORT+\n            \"\");\n        \n        } catch(error){\n            console.log(\"ws://\" +\n            Config.ROSBRIDGE_SERVER_IP +\n            \":\" +\n            Config.ROSBRIDGE_SERVER_PORT+\n            \"\")\n            console.log(\"cancont connect to the WS robot. Try again after 1 sec\");\n        }\n    }\n\n   \n\n\n    view_map(){\n        var viewer = new window.ROS2D.Viewer({\n            divID: \"nav_div\",\n            width:640,\n            height:480,\n        });\n\n        var navClient = new window.NAV2D.OccupancyGridClientNav({\n            ros: this.state.ros,\n            rootObject: viewer.scene,\n            viewer: viewer,\n            severName: \"/move_base\",\n            withOrientation: true,\n\n        });\n       \n    }\n\n    \n\n    render(){\n        return(\n            <div>\n                <div id=\"nav_div\">Viewer</div>\n            </div>\n        );\n           \n       \n        \n    }\n}\n\nexport default Map;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,mBAAmB;AAAC;AAEvC,MAAMC,GAAG,SAASF,SAAS;EAMvBG,WAAW,GAAE;IACT,KAAK,EAAE;IAAC,KALZC,KAAK,GAAG;MACJC,GAAG,EAAE;IACT,CAAC;IAIG,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC;EAC5C;EAGAC,eAAe,GAAE;IACb,IAAI,CAACJ,KAAK,CAACC,GAAG,GAAG,IAAII,MAAM,CAACC,MAAM,CAACC,GAAG,EAAE;IACxCC,OAAO,CAACC,GAAG,CAAC,MAAM,GAAG,IAAI,CAACT,KAAK,CAACC,GAAG,CAAC;IACpC,IAAG;MACC,IAAI,CAACD,KAAK,CAACC,GAAG,CAACS,OAAO,CAAC,OAAO,GAC9Bb,MAAM,CAACc,mBAAmB,GAC1B,GAAG,GACHd,MAAM,CAACe,qBAAqB,GAC5B,EAAE,CAAC;IAEP,CAAC,CAAC,OAAMC,KAAK,EAAC;MACVL,OAAO,CAACC,GAAG,CAAC,OAAO,GACnBZ,MAAM,CAACc,mBAAmB,GAC1B,GAAG,GACHd,MAAM,CAACe,qBAAqB,GAC5B,EAAE,CAAC;MACHJ,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;IACzE;EACJ;EAKAP,QAAQ,GAAE;IACN,IAAIY,MAAM,GAAG,IAAIT,MAAM,CAACU,KAAK,CAACC,MAAM,CAAC;MACjCC,KAAK,EAAE,SAAS;MAChBC,KAAK,EAAC,GAAG;MACTC,MAAM,EAAC;IACX,CAAC,CAAC;IAEF,IAAIC,SAAS,GAAG,IAAIf,MAAM,CAACgB,KAAK,CAACC,sBAAsB,CAAC;MACpDrB,GAAG,EAAE,IAAI,CAACD,KAAK,CAACC,GAAG;MACnBsB,UAAU,EAAET,MAAM,CAACU,KAAK;MACxBV,MAAM,EAAEA,MAAM;MACdW,SAAS,EAAE,YAAY;MACvBC,eAAe,EAAE;IAErB,CAAC,CAAC;EAEN;EAIAC,MAAM,GAAE;IACJ,oBACI;MAAA,uBACI;QAAK,EAAE,EAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAa;MAAA;MAAA;MAAA;IAAA,QAC5B;EAKd;AACJ;AAEA,eAAe7B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}